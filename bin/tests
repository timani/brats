#!/bin/bash -l

set -eo pipefail
trap 'echo "error in $0 ${BASH_SOURCE} ${LINENO}"' ERR

stack=lucid64
should_upload=true
host=""
git_branch="master"
BUILDPACK_WORKSPACE=${BUILDPACK_WORKSPACE:-${HOME}/workspace}

usage() {
  echo "Usage: $0

  Options:
      [--language=LANGUAGE] # REQUIRED - Specifies the set of binaries to be tested.
                            # Possible values: ruby, python, go, nodejs, php
      [--host=HOST]         # Specifies the host to target for running tests.
                            # Example: ci=8.example.com
      [--no-upload]         # Specifies whether to upload local buildpack to cf.
                            # Default: false
      [--branch=BRANCH]     # Specifies which git branch of the buildpack to run tests against.
                            # Default: master"
  exit 1
}

indent() {
  echo -e "\n******* $1"
}

configure_stack() {
  if [ "$host" == "" ]; then
    host=10.244.0.34.xip.io
    export VAGRANT_CWD="$HOME/workspace/bosh-lite"
    $VAGRANT_CWD/bin/add-route
  fi

  indent "Using the stack '$stack' against the host '$host'"
}

configure_cf() {
  indent "Connecting to CF"
  cf api api.$host --skip-ssl-validation
  cf_password=${CF_PASSWORD:-"admin"}
  cf login -u admin -p $cf_password -o pivotal -s integration
}

configure_ruby_version() {
  if [ -d $HOME/.rvm/bin ] ; then
    indent "Configuring RVM"
    export PATH=$HOME/.rvm/bin:$PATH
    rvm use 2.1.5
  else
    indent "Using default ruby"
  fi
}

while [ "$#" -gt 0 ]; do
  case $1 in
    -h|-\?|--help|help)
        usage
        exit
        ;;
    --language=*)
      if [ "$#" == "" ]; then
        usage
      else
        language=${1#*=}
      fi
      ;;
    --host=*)
      host=${1#*=}
      ;;
    --no-upload)
      should_upload=false;;
    --branch=*)
      git_branch=${1#*=};;
    -?*)
      echo "Unrecognized option ($1) submitted"
      usage
      ;;
    *)
  esac
  shift
done

if [ "$language" == "" ]; then
  usage
fi

configure_ruby_version
configure_stack
configure_cf

upload_buildpack() {
  local name=$1

  indent "Checking out buildpack"
  mkdir -p tmp/
  git clone https://github.com/cloudfoundry/$name-buildpack tmp/$name-buildpack

  set +e
  pushd tmp/$name-buildpack
    indent "Checking out branch $git_branch"
    git checkout $git_branch
    git submodule update --init --recursive

    indent "Creating cached buildpack $name"
    BUNDLE_GEMFILE=cf.Gemfile bundle install
    BUNDLE_GEMFILE=cf.Gemfile bundle exec buildpack-packager cached
    indent "Deleting previous buildpack"
    cf delete-buildpack $name-brat-buildpack -f
    indent "Uploading buildpack"

    ls -asl


    
    pattern="*_buildpack-cached*.zip"
    cf create-buildpack $name-brat-buildpack $(ls $pattern | head -n 1) 100 --enable
  popd
  set -e
}

on_close() {
  rm -Rf tmp/$language-buildpack
  cf delete-buildpack $language-brat-buildpack -f
}

trap on_close INT ERR

if [ "$should_upload" == "true" ]; then
  upload_buildpack $language
fi

BUNDLE_GEMFILE=cf.Gemfile rspec \
  -f documentation \
  --require rspec/instafail \
  -f RSpec::Instafail \
  --color \
  cf_spec/integration/"$language"_spec.rb
on_close
